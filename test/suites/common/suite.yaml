apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: suite
  namespace: karpenter-tests
spec:
  params:
    - name: cluster-name
      default: $(context.pipelineRun.namespace)-$(context.pipelineRun.name)
      description: Uniquely identifies a cluster name for the suite.
    - name: git-repo
      default: https://github.com/aws/karpenter.git
      description: Karpenter clone repo url
    - name: git-ref
      default: HEAD
      description: Git commit, tag, or branch to check out. Requires a corresponding Karpenter snapshot release.
    - name: test-filter
      description: Test filter passed to `go test -run`
    - name: cleanup
      default: "true"
      description: If true, clean up resources
  tasks:

  - name: setup
    taskRef:
      name: setup
    params:
    - name: cluster-name
      value: $(params.cluster-name)
    - name: git-repo
      value: $(params.git-repo)
    - name: git-ref
      value: $(params.git-ref)

  - name: run-test
    taskRef:
      name: run-test
    params:
    - name: cluster-name
      value: $(params.cluster-name)
    - name: git-repo
      value: $(params.git-repo)
    - name: git-ref
      value: $(params.git-ref)
    - name: test-filter
      value: $(params.test-filter)
    runAfter:
    - setup

  finally:
  - name: cleanup
    taskRef:
      name: cleanup
    params:
    - name: cluster-name
      value: $(params.cluster-name)
    when:
    - input: $(params.cleanup)
      operator: in
      values:
        - "true"
  - name: notify-build-failure
    when:
      - input: $(tasks.status)
        operator: in
        values: ["Failed"]
    taskRef:
      name: notify-slack
    params:
    - name: webhook-secret
      value: slack-webhook-secret
    - name: message
      value: $(context.pipelineRun.name) has failed
